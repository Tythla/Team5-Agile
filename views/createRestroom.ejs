<h1>Create Restroom</h1>
<form action="/createRestroom" method="POST" enctype="multipart/form-data">
    <!-- Location -->
    <label for="address">Address*:</label><br>
    <input type="text" id="address" name="location[address]" required><br><br>

    <input type="hidden" id="latitude" name="location[latitude]">
    <input type="hidden" id="longitude" name="location[longitude]">
    <input type="hidden" id="city" name="location[city]">
    <input type="hidden" id="state" name="location[state]">

    <label for="capacity">Capacity:</label><br>
    <input type="number" id="capacity" name="capacity"><br><br>

    <!-- Metrics -->
    <input type="hidden" name="metrics[hasBabyChangingTable]" value="false">
    <input type="hidden" name="metrics[providesSanitaryProducts]" value="false">
    <input type="hidden" name="metrics[customerOnly]" value="false">
    <input type="hidden" name="metrics[dryer]" value="false">

    <input type="checkbox" id="hasBabyChangingTable" name="metrics[hasBabyChangingTable]" value="true">
    <label for="hasBabyChangingTable">Baby Changing Table</label><br>

    <input type="checkbox" id="providesSanitaryProducts" name="metrics[providesSanitaryProducts]" value="true">
    <label for="providesSanitaryProducts">Sanitary Products</label><br>

    <input type="checkbox" id="customerOnly" name="metrics[customerOnly]" value="true">
    <label for="customerOnly">Customer Only</label><br>

    <input type="checkbox" id="dryer" name="metrics[dryer]" value="true">
    <label for="dryer">Hand Dryer</label><br>
    <br>
    <!-- Rating Metrics -->
    <label for="cleanliness">Cleanliness Rating (1-5)*:</label><br>
    <input type="range" id="cleanliness" name="ratingMetrics[cleanliness]" min="1" max="5" required><br>

    <label for="accessibility">Accessibility Rating (1-5)*:</label><br>
    <input type="range" id="accessibility" name="ratingMetrics[accessibility]" min="1" max="5" required><br>

    <label for="facility">Facility Rating (1-5)*:</label><br>
    <input type="range" id="facility" name="ratingMetrics[facility]" min="1" max="5" required><br><br>

    <label for="text">Review:</label><br>
    <input type="text" id="text" name="text" size="50"><br><br>

    <label for="reviewImage">Upload Images:</label><br>
    <input type="file" id="reviewImage" name="reviewImage" >

    <p>* are required</p><br>
    <!-- submit and backbutton on one row with same size -->
    <input type="submit" value="Submit" class="register-button">
    <input type="button" value="Back" onclick="window.location.href='/home'" class="register-button">
    
</form>

<!-- Google Places API Integration -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHqfPgHzkC2REof5lJQKFoPaAadhDdP84&libraries=places"></script>
<script>
    let autocomplete;
    function initAutocomplete() {
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('address'), {types: ['geocode']}
        );
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        const place = autocomplete.getPlace();
        document.getElementById('latitude').value = place.geometry.location.lat();
        document.getElementById('longitude').value = place.geometry.location.lng();

        for (const component of place.address_components) {
            const componentType = component.types[0];
            switch (componentType) {
                case "locality":
                    document.getElementById('city').value = component.long_name;
                    break;
                case "administrative_area_level_1":
                    document.getElementById('state').value = component.short_name;
                    break;
            }
        }
    }

    window.addEventListener('load', initAutocomplete);
</script>